fn primes(count) {
    let n = 3;
    println(2);

    let found = 0;

    # Endlessly loop over numbers
    while found < count {
        let n2  = 3;
        let is_prime = true;
        while n2 != n {
            # Test if division result is an integer
            if n / n2 == n \ n2 {
                is_prime = false;
                break;
            };
            n2 += 2;
        };
        if is_prime {
            println(n);
            found += 1;
        };
        n += 2;
    };
};

# Calculate 15 prime numbers
primes(15);
